name: Build and Deploy JustScore

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  REGISTRY: justscoreacr.azurecr.io
  IMAGE_NAME: justscore
  RESOURCE_GROUP: justscore-rg
  APP_SERVICE_NAME: justscore-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Log in to Azure
      id: azure-login
      continue-on-error: true
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Check Azure login status
      if: steps.azure-login.outcome != 'success'
      run: |
        echo "::error::Azure login failed. Please ensure AZURE_CREDENTIALS secret is properly configured."
        echo "AZURE_CREDENTIALS should be a JSON object with clientId, clientSecret, tenantId, and subscriptionId."
        echo "You can create the appropriate credentials by running:"
        echo "az ad sp create-for-rbac --name \"JustScoreGitHubActions\" --role Contributor --scopes /subscriptions/<subscription-id>/resourceGroups/justscore-rg --sdk-auth"
        exit 1
        
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_SERVICE_NAME }}
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
    - name: Azure logout
      run: |
        az logout
        
  notify:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send notification
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#deployments'
      if: always() && false  # Disabled until Slack webhook is configured 